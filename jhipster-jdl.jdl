entity Azienda {
	cf String,
    ragioneSociale String,
    indirizzoSede String,
    provinciaSede String,
    regioneSede String,
    capSede String pattern(/[0-9]+/)
}

entity Candidato {
	cf String,
    nome String,
    cognome String,
    dataNascita LocalDate,
    luogoNascita String,
    sesso String,
    telefono String pattern(/[0-9]+/),
    email String,
    citta String,
    indirizzo String,
    cap String pattern(/[0-9]+/),
    provincia String,
    regione String
}

entity Esperienza {
    attivita String,
    dal LocalDate,
    al LocalDate,
    datoreLavoro String,
    sedeLavoro String
}

entity GapAnalysis {
 	codiceEsco String,
 	nome String,
	frequenza Integer
}

entity Istruzione {
    codiceIsced String,
    codiceLivello String,
    nome String,
    campoStudio String,
    sinonimi String,
    codiceIstituto String,
    tipoIstituto String
}

entity Navigator {
	cf String,
    nome String,
    cognome String,
    dataNascita LocalDate,
    sesso String,
    telefono String pattern(/[0-9]+/),
    email String,
    citta String,
    indirizzo String,
    cap String pattern(/[0-9]+/),
    provincia String,
    regione String
}

entity Occupazione {
	codiceEsco String,
    nome String
}

entity Offerta {
    data LocalDate,
    indirizzoSede String,
    cittaSede String,
    capSede String pattern(/[0-9]+/),
    provinciaSede String
}

entity OffertaSkill {
	optional Boolean
}

entity Skill {
	codiceEsco String pattern(/[0-9]+/),
    nome String,
    tipo String
}

entity Cv {
	inserimento LocalDate
}

entity CvIstruzione {
	punteggio Integer
}

entity SkillUtente {
    codiceEscoSkill String
}

entity OffertaOccupazioneRichiesta {
	anni Integer
}

relationship OneToMany {
	Skill to SkillUtente,
    Skill to OffertaSkill,
    Offerta to OffertaSkill,
    Offerta to OffertaOccupazioneRichiesta,
    Istruzione to Offerta,
    Istruzione to CvIstruzione,
    Azienda to Offerta,
    Candidato to SkillUtente,
    Candidato to Cv,
    Cv to CvIstruzione,
    Cv to Esperienza,
    Occupazione to OffertaOccupazioneRichiesta,
    Navigator to Candidato
}

relationship ManyToMany {
	Occupazione to Esperienza,
    Occupazione to Offerta,
    Occupazione to Skill 
}  

relationship OneToOne {
  Azienda{internalUser} to User,
  Candidato{internalUser} to User,
  Navigator{internalUser} to User
}

paginate * with pagination